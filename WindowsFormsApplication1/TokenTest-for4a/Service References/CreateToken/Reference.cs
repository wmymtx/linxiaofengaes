//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TokenTest_for4a.CreateToken {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://10.109.209.100:9081/uac/services/CreateToken", ConfigurationName="CreateToken.CreateTokenWebService")]
    public interface CreateTokenWebService {
        
        // CODEGEN: 消息 CreateTokenRequest 的包装命名空间(http://service.base.app.core.a4.asiainfo.com)以后生成的消息协定与默认值(http://10.109.209.100:9081/uac/services/CreateToken)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        TokenTest_for4a.CreateToken.CreateTokenResponse CreateToken(TokenTest_for4a.CreateToken.CreateTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<TokenTest_for4a.CreateToken.CreateTokenResponse> CreateTokenAsync(TokenTest_for4a.CreateToken.CreateTokenRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateToken", WrapperNamespace="http://service.base.app.core.a4.asiainfo.com", IsWrapped=true)]
    public partial class CreateTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string acctSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string resEntityId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public long mainAcctId;
        
        public CreateTokenRequest() {
        }
        
        public CreateTokenRequest(string acctSeq, string resEntityId, long mainAcctId) {
            this.acctSeq = acctSeq;
            this.resEntityId = resEntityId;
            this.mainAcctId = mainAcctId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTokenResponse", WrapperNamespace="http://10.109.209.100:9081/uac/services/CreateToken", IsWrapped=true)]
    public partial class CreateTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string CreateTokenReturn;
        
        public CreateTokenResponse() {
        }
        
        public CreateTokenResponse(string CreateTokenReturn) {
            this.CreateTokenReturn = CreateTokenReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CreateTokenWebServiceChannel : TokenTest_for4a.CreateToken.CreateTokenWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTokenWebServiceClient : System.ServiceModel.ClientBase<TokenTest_for4a.CreateToken.CreateTokenWebService>, TokenTest_for4a.CreateToken.CreateTokenWebService {
        
        public CreateTokenWebServiceClient() {
        }
        
        public CreateTokenWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreateTokenWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateTokenWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateTokenWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TokenTest_for4a.CreateToken.CreateTokenResponse TokenTest_for4a.CreateToken.CreateTokenWebService.CreateToken(TokenTest_for4a.CreateToken.CreateTokenRequest request) {
            return base.Channel.CreateToken(request);
        }
        
        public string CreateToken(string acctSeq, string resEntityId, long mainAcctId) {
            TokenTest_for4a.CreateToken.CreateTokenRequest inValue = new TokenTest_for4a.CreateToken.CreateTokenRequest();
            inValue.acctSeq = acctSeq;
            inValue.resEntityId = resEntityId;
            inValue.mainAcctId = mainAcctId;
            TokenTest_for4a.CreateToken.CreateTokenResponse retVal = ((TokenTest_for4a.CreateToken.CreateTokenWebService)(this)).CreateToken(inValue);
            return retVal.CreateTokenReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TokenTest_for4a.CreateToken.CreateTokenResponse> TokenTest_for4a.CreateToken.CreateTokenWebService.CreateTokenAsync(TokenTest_for4a.CreateToken.CreateTokenRequest request) {
            return base.Channel.CreateTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<TokenTest_for4a.CreateToken.CreateTokenResponse> CreateTokenAsync(string acctSeq, string resEntityId, long mainAcctId) {
            TokenTest_for4a.CreateToken.CreateTokenRequest inValue = new TokenTest_for4a.CreateToken.CreateTokenRequest();
            inValue.acctSeq = acctSeq;
            inValue.resEntityId = resEntityId;
            inValue.mainAcctId = mainAcctId;
            return ((TokenTest_for4a.CreateToken.CreateTokenWebService)(this)).CreateTokenAsync(inValue);
        }
    }
}
